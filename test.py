async def all_data_report_type_handler(callback_query: types.CallbackQuery, state: FSMContext):
    str_numbers = [str(i) for i in range(1, 31)]

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if message.text == config['msg']['main_menu']:
        # –£–¥–∞–ª—è–µ–º 2 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            for i in range(3):
                await message.bot.delete_message(message.chat.id, message.message_id - i)
        except:
            pass

        await main_menu(message, state)
    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –≤–º–µ—Å—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    elif message.text == config['msg']['back']:
        # –£–¥–∞–ª—è–µ–º 2 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            for i in range(2):
                await message.bot.delete_message(message.chat.id, message.message_id - i)
        except:
            pass

        await MyStates.waiting_for_worker_number.set()
        await report_handler(message, state=state)

    # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 30
    elif message.text.strip() in str_numbers:
        # –£–¥–∞–ª—è–µ–º 2 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            for i in range(2):
                await message.bot.delete_message(message.chat.id, message.message_id - i)
        except:
            pass

        # –£—Å—Ç–∞–Ω–æ–≤–∏–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
        await MyStates.waiting_report_page_buttons.set()

        all_data = await state.get_data()
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: (ID, name, Who, chat_id)
        chosen_worker = all_data['chosen_worker']
        chosen_term = message.text.strip()

        # –°—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–ø–æ–∑–¥–∞–Ω–∏–π
        total_late_hours = datetime.timedelta()
        # –•—Ä–∞–Ω–∏—Ç —Å—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è(—Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏)
        total_early_lived_time = datetime.timedelta()
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–∏—à–µ–ª
        missed_days = 0

        # –ü–æ–ª—É—á–∞–µ–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã "report" –≤—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–ø–æ–∑–¥–∞–Ω–∏–∏ –ø–æ id —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ä–æ–∫:  [(id, user_id, date, comment, time), ...], –≥–¥–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π –¥–µ–Ω—å
        worker_report_list = sql_handler.get_data_by_term(chosen_worker[0], chosen_term)
        # –ò–∑ worker_report_list —Å–æ–∑–¥–∞–¥–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É: {date: (id, user_id, date, comment, time), ...}
        worker_report_dict = {}
        for day in worker_report_list:
            worker_report_dict[day[2]] = day

        # –°–æ—Å—Ç–∞–≤–∏–º —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ date() —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ü–∏–∫–ª–∞: [..., datetime.datetime.now().date()]
        chosen_days = []
        for i in range(int(chosen_term)):
            day = datetime.datetime.now().date() - datetime.timedelta(days=i)
            chosen_days.append(day)
        chosen_days.reverse()

        msg2_block_list = []
        for day in chosen_days:
            # –ï—Å–ª–∏ –ø—Ä–∏ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≥–æ –¥–Ω—è –≤—ã–π–¥–µ—Ç –æ—à–∏–±–∫–∞, —Ç–æ–≥–¥–∞ –≤ —ç—Ç–æ —á–∏—Å–ª–æ –Ω–∞–ø–∏—à–µ–º —á—Ç–æ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏: "–ü—Ä–∏—Ö–æ–¥: | –£—Ö–æ–¥: "
            if True:
                # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞ –∏ —É—Ö–æ–¥–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã:  (in_time, out_time) –∏–ª–∏ (in_time, False) –∏–ª–∏ False
                in_out_time = sql_handler.get_user_in_out_history(chosen_worker[0], day)

                # –ï—Å–ª–∏ –¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ(date) –≤—ã—Ö–æ–¥–Ω–æ–π, —Ç–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ–º: "üóì –í—ã—Ö–æ–¥–Ω—ã–µ\n –í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞ | –í—Ä–µ–º—è —É—Ö–æ–¥–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "üóì –í—ã—Ö–æ–¥–Ω—ã–µ\n –ù–µ –ø—Ä–∏—à–µ–ª"
                if str(datetime.date.isoweekday(day)) in config['time']['day_off']:
                    mesg1 = '<b>üìç ' + config['msg']['three_lines'] + ' ' + str(day.strftime('%d.%m.%Y')) + ' ' + \
                            config['msg']['three_lines'] + '</b>'
                    mesg2 = config['msg']['weekend']

                    # –ï—Å–ª–∏ –≤ in_out_time: False
                    if not in_out_time:
                        mesg3 = config['msg']['dont_came']
                    # –ï—Å–ª–∏ –≤ in_out_time: (in_time, out_time)
                    elif in_out_time[0] and in_out_time[1]:
                        mesg3_1 = config['msg']['came'] + ' ' + in_out_time[0].strftime('%H:%M')
                        mesg3_2 = config['msg']['leaved'] + ' ' + in_out_time[1].strftime('%H:%M')
                        mesg3 = mesg3_1 + '  <b>|</b>  ' + mesg3_2
                    # –ï—Å–ª–∏ –≤ in_out_time: (in_time, False)
                    else:
                        mesg3_1 = config['msg']['came'] + ' ' + in_out_time[0].strftime('%H:%M')
                        mesg3_2 = config['msg']['leaved']
                        mesg3 = mesg3_1 + '  <b>|</b>  ' + mesg3_2

                    # –°–æ—Å—Ç–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    msg2 = mesg1 + '\n' + mesg2 + '\n' + mesg3

                    # –î–æ–±–∞–≤–∏–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ msg2_block_list
                    msg2_block_list.append(msg2)

                    # –í—Å–µ —á—Ç–æ –≤–Ω–∏–∑—É –ø—Ä–æ–ø—É—Å—Ç–∏–º
                    continue

                if day in worker_report_dict:
                    # –ï—Å–ª–∏ –æ–Ω –ø—Ä–∏—à–µ–ª —Å –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º, —Å–æ—Å—Ç–∞–≤–∏–º –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. worker_report_dict[day] —Ö—Ä–∞–Ω–∏—Ç (id, user_id, date, comment, time)
                    if worker_report_dict[day][4]:
                        mesg1 = config['msg']['came'] + ' ' + str(worker_report_dict[day][4].strftime("%H:%M"))

                        # –û–ø—Ä–µ–¥–µ–ª–∏–º –Ω–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç –æ–Ω –æ–ø–æ–∑–¥–∞–ª
                        beginning_delta = datetime.timedelta(hours=int(config['time']['start_hour']),
                                                             minutes=int(config['time']['start_minute']))
                        came_time = worker_report_dict[day][4]
                        came_time_delta = datetime.timedelta(hours=came_time.hour, minutes=came_time.minute,
                                                             seconds=came_time.second)
                        late_time_in_seconds = came_time_delta - beginning_delta
                        late_time = (datetime.datetime.min + late_time_in_seconds).time()
                        late_time_str = late_time.strftime("%H:%M")
                        mesg3 = config['msg']['late_by'] + ' ' + late_time_str

                        # –ü—Ä–∏–±–∞–≤–∏–º –≤—Ä–µ–º—è –æ–ø–æ–∑–¥–∞–Ω–∏—è –≤ —Å—É–º–º–∞—Ä–Ω—É—é delta
                        total_late_hours += late_time_in_seconds

                        if worker_report_dict[day][3]:
                            mesg4 = config['msg']['reason'] + ' ' + worker_report_dict[day][3]
                        else:
                            mesg4 = config['msg']['reason']

                        if in_out_time:
                            # –ü–æ–ª—É—á–∏—Ç (msg, timedelta): "–£—à–µ–ª –≤: 19:20" –∏–ª–∏ "–£—à–µ–ª –≤: 15:20\n –£—à–µ–ª —Ä–∞–Ω—å—à–µ —á–µ–º: 3:40" –∏–ª–∏ "–£—à–µ–ª –≤: –ù–µ—Ç—É –¥–∞–Ω–Ω—ã—Ö"
                            # timedelta: —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è
                            out_check = early_leave_check(in_out_time[1])
                            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è —É—Ö–æ–¥–∞ –∏ —Ä–∞–Ω–Ω–µ–≥–æ —É—Ö–æ–¥–∞
                            mesg2_5 = out_check[0]
                            if '#' in mesg2_5:
                                ms = mesg2_5.split('#')
                                mesg2 = ms[0]
                                mesg5 = f"\n{ms[1]}"
                            else:
                                mesg2 = mesg2_5
                                mesg5 = ''
                            # –ü—Ä–∏–±–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤ —Å—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–Ω–Ω–µ–≥–æ —É—Ö–æ–¥–∞(–µ—Å–ª–∏ –æ–Ω —É—à–µ–ª —Ä–∞–Ω—å—à–µ. –ê –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ timedelta = 0)
                            total_early_lived_time += out_check[1]
                        else:
                            mesg2 = config['msg']['leaved']
                            mesg5 = ''
                            total_early_lived_time += datetime.timedelta(0)

                        # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ "–ü—Ä–∏—Ö–æ–¥:\n –û–ø–æ–∑–¥–∞–ª –Ω–∞:\n –ü—Ä–∏—á–∏–Ω–∞:\n –£—à–µ–ª –≤:"
                        msg2_2 = mesg1 + '  <b>|</b>  ' + mesg2 + '\n' + mesg3 + '\n' + mesg4 + mesg5
                    # –¢–∞–∫ –∫–∞–∫ —Å—Ç–æ–ª–±–µ—Ü time –ø—É—Å—Ç, –∑–Ω–∞—á–∏—Ç –æ–Ω –Ω–µ –ø—Ä–∏—à–µ–ª
                    else:
                        mesg1 = config['msg']['did_not_come']

                        if worker_report_dict[day][3]:
                            mesg2 = config['msg']['reason'] + ' ' + worker_report_dict[day][3]
                        else:
                            mesg2 = config['msg']['reason']

                        msg2_2 = mesg1 + '\n' + mesg2
                        missed_days += 1
                # –ï—Å–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ report –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–Ω–Ω—ã–π –¥–µ–Ω—å, –∑–Ω–∞—á–∏—Ç –æ–Ω –ø—Ä–∏—à–µ–ª –≤–æ –≤—Ä–µ–º—è
                else:
                    if in_out_time:
                        mesg1 = config['msg']['came'] + ' ' + in_out_time[0].strftime("%H:%M")

                        # –ü–æ–ª—É—á–∏—Ç (msg, timedelta): "–£—à–µ–ª –≤: 19:20" –∏–ª–∏ "–£—à–µ–ª –≤: 15:20\n –£—à–µ–ª —Ä–∞–Ω—å—à–µ —á–µ–º: 3:40" –∏–ª–∏ "–£—à–µ–ª –≤: –ù–µ—Ç—É –¥–∞–Ω–Ω—ã—Ö"
                        # timedelta: —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è
                        out_check = early_leave_check(in_out_time[1])
                        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è —É—Ö–æ–¥–∞ –∏ —Ä–∞–Ω–Ω–µ–≥–æ —É—Ö–æ–¥–∞
                        mesg2_5 = out_check[0]
                        if '#' in mesg2_5:
                            ms = mesg2_5.split('#')
                            mesg2 = ms[0]
                            mesg3 = f"\n{ms[1]}"
                        else:
                            mesg2 = mesg2_5
                            mesg3 = ''
                        # –ü—Ä–∏–±–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤ —Å—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è —Ä–∞–Ω–Ω–µ–≥–æ —É—Ö–æ–¥–∞(–µ—Å–ª–∏ –æ–Ω —É—à–µ–ª —Ä–∞–Ω—å—à–µ. –ê –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ timedelta = 0)
                        total_early_lived_time += out_check[1]
                    else:
                        mesg1 = config['msg']['came']

                        mesg2 = config['msg']['leaved']
                        mesg3 = ''
                        total_early_lived_time += datetime.timedelta(0)

                    # –•—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ "–ü—Ä–∏—Ö–æ–¥:\n –£—à–µ–ª –≤: "
                    msg2_2 = mesg1 + '  <b>|</b>  ' + mesg2 + mesg3

                msg2_1 = '<b>üìç ' + config['msg']['three_lines'] + ' ' + str(day.strftime('%d.%m.%Y')) + ' ' + \
                         config['msg']['three_lines'] + '</b>'
                msg2 = msg2_1 + '\n' + msg2_2

                # –î–æ–±–∞–≤–∏–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ msg2_block_list
                msg2_block_list.append(msg2)

        # –ò–∑ –¥–µ–ª—å—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ –æ–±—ã—á–Ω—ã–π –≤—Ä–µ–º—è –æ–ø–æ–∑–¥–∞–Ω–∏–π
        total_late_time = datetime.datetime.min + total_late_hours

        if total_late_time.day == 1:
            total_late = total_late_time.strftime('%H:%M')
        else:
            total_late = total_late_time.strftime('%d –¥–Ω–µ–π %H:%M')
        # –ò–∑ –¥–µ–ª—å—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ –æ–±—ã—á–Ω—ã–π –≤—Ä–µ–º—è —Ä–∞–Ω–Ω–µ–≥–æ —É—Ö–æ–¥–∞
        total_early_time = datetime.datetime.min + total_early_lived_time
        if total_early_time.day == 1:
            total_early = total_early_time.strftime('%H:%M')
        else:
            total_early = total_early_time.strftime('%d –¥–Ω–µ–π %H:%M')

        msg3_1 = config['msg']['total_late'] + ' ' + total_late
        msg3_2 = config['msg']['total_early'] + ' ' + total_early
        msg3_3 = config['msg']['total_missed'] + ' ' + str(missed_days)

        msg1 = config['msg']['you_chose'] + chosen_worker[1]
        msg2 = '\n\n'.join(msg2_block_list)
        msg3 = msg3_1 + '\n' + msg3_2 + '\n' + msg3_3
        msg = msg1 + '\n\n' + msg2 + '\n' + config['msg']['lines'] + '\n' + msg3

        # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        button = button_creators.reply_keyboard_creator([[config['msg']['back'], config['msg']['main_menu']]])
        await message.answer(
            msg,
            reply_markup=button
        )

    # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç
    else:
        # –°–æ–∑–¥–∞–¥–∏–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        button = button_creators.reply_keyboard_creator([[config['msg']['back'], config['msg']['main_menu']]])
        # –£–¥–∞–ª—è–µ–º 2 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            for i in range(2):
                await message.bot.delete_message(message.chat.id, message.message_id - i)
        except:
            pass

        msg = config['msg']['wrong_term']
        await message.answer(msg, reply_markup=button)
